[{"/Users/yarycka/rick-morty-universe/src/components/UserCard/UserCard.js":"1"},{"size":1562,"mtime":1611485515868,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1ibrz2g","/Users/yarycka/rick-morty-universe/src/components/UserCard/UserCard.js",["7"],"import { useHistory, Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport Tag from \"../Tag\";\nimport \"./UserCard.scss\";\nimport TextField from \"../TextField\";\n\nconst UserCard = ({ name, status, gender, location, origin, image, id }) => {\n  const history = useHistory();\n\n  const handleClick = () => history.push(`/character/${id}`);\n\n  return (\n    <div className=\"UserCard\">\n      <img className=\"UserCard__image\" src={image} />\n      <div className=\"UserCard__info\">\n        <Link to=\"/character\">\n          <header onClick={handleClick} className=\"UserCard__name\">\n            {name}\n          </header>\n        </Link>\n        <div className=\"UserCard__tags\">\n          <Tag className=\"UserCard__tag\">{gender}</Tag>\n          <Tag className=\"UserCard__tag\">{status}</Tag>\n        </div>\n        <TextField label=\"Last known location:\" className=\"UserCard__textField\">\n          {location?.name}\n        </TextField>\n        <TextField label=\"First seen in:\" className=\"UserCard__textField\">\n          {origin?.name}\n        </TextField>\n      </div>\n    </div>\n  );\n};\n\nUserCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  origin: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  image: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default UserCard;\n",{"ruleId":"8","severity":1,"message":"9","line":14,"column":7,"nodeType":"10","endLine":14,"endColumn":54},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]